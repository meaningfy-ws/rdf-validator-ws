# baseURI: http://publications.europa.eu/ontology/euvoc/euvocShapes
# imports: http://datashapes.org/dash
# imports: http://publications.europa.eu/ontology/euvoc
# prefix: euvocShapes

@prefix : <http://publications.europa.eu/ontology/euvoc/euvocShapes#> .
@prefix adms: <http://www.w3.org/ns/adms#> .
@prefix concept-status: <http://publications.europa.eu/resource/authority/concept-status#> .
@prefix dash: <http://datashapes.org/dash#> .
@prefix dcat: <http://www.w3.org/ns/dcat#> .
@prefix dct: <http://purl.org/dc/terms/> .
@prefix euvoc: <http://publications.europa.eu/ontology/euvoc#> .
@prefix euvocShapes: <http://publications.europa.eu/ontology/euvoc/euvocShapes#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix label-type: <http://publications.europa.eu/resource/authority/label-type#> .
@prefix lexinfo: <http://www.lexinfo.net/ontology/2.0/lexinfo#> .
@prefix notation-type: <http://publications.europa.eu/resource/authority/notation-type#> .
@prefix org: <http://www.w3.org/ns/org#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix place: <http://publications.europa.eu/resource/authority/place#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix shskos: <http://topbraid.org/shacl/skos.shacl#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix skosxl: <http://www.w3.org/2008/05/skos-xl#> .
@prefix spin: <http://spinrdf.org/spin#> .
@prefix tableDescriptions: <http://publications.europa.eu/ontology/euvoc/tableDescriptions#> .
@prefix treaty: <http://publications.europa.eu/resource/authority/treaty#> .
@prefix treaty-classification: <http://publications.europa.eu/resource/authority/treaty-classification#> .
@prefix use-context: <http://publications.europa.eu/resource/authority/use-context#> .
@prefix v: <http://www.w3.org/2006/vcard/ns#> .
@prefix void: <http://rdfs.org/ns/void#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

euvoc:DatedThing
  rdf:type owl:Class ;
  rdf:type sh:NodeShape ;
  rdfs:comment "Dated thing" ;
  rdfs:label "Dated thing" ;
  owl:versionInfo "EuVoc 1.1" ;
  sh:property [
      sh:path euvoc:endDate ;
      sh:datatype xsd:date ;
      sh:maxCount 1 ;
      sh:name "end date" ;
    ] ;
  sh:property [
      sh:path euvoc:startDate ;
      sh:datatype xsd:date ;
      sh:maxCount 1 ;
      sh:name "start date" ;
    ] ;
  sh:property [
      sh:path euvoc:startDate ;
      sh:lessThanOrEquals euvoc:endDate ;
    ] ;
  sh:property [
      sh:path dct:created ;
      sh:datatype xsd:date ;
      sh:maxCount 1 ;
      sh:name "created" ;
    ] ;
  sh:property [
      sh:path dct:dateAccepted ;
      sh:datatype xsd:date ;
      sh:maxCount 1 ;
      sh:name "date accepted" ;
    ] ;
  sh:property [
      sh:path dct:dateSubmitted ;
      sh:datatype xsd:date ;
      sh:maxCount 1 ;
      sh:name "date submitted" ;
    ] ;
  sh:property [
      sh:path dct:dateSubmitted ;
      sh:lessThanOrEquals dct:dateAccepted ;
    ] ;
  sh:sparql [
      sh:description "There is an acceptance without a submission" ;
      sh:message "There is an acceptance without a submission" ;
      sh:select """prefix skos: <http://www.w3.org/2004/02/skos/core#>
prefix skosxl: <http://www.w3.org/2008/05/skos-xl#>
prefix euvoc: <http://publications.europa.eu/ontology/euvoc#>
prefix dct: <http://purl.org/dc/terms/>
SELECT $this ($this AS ?subject) (dct:dateSubmitted AS ?predicate) (\"missing\" AS ?object)
WHERE {
    $this dct:dateAccepted ?dateAccepted .  
    FILTER NOT EXISTS {$this dct:dateSubmitted ?dateSubmitted}
}""" ;
      sh:severity sh:Violation ;
    ] ;
  sh:sparql [
      sh:description "There is an end without beginning (endDate without startDate)" ;
      sh:message "There is an end without beginning (endDate without startDate)" ;
      sh:select """prefix skos: <http://www.w3.org/2004/02/skos/core#>
prefix skosxl: <http://www.w3.org/2008/05/skos-xl#>
prefix euvoc: <http://publications.europa.eu/ontology/euvoc#>
prefix dct: <http://purl.org/dc/terms/>
SELECT $this ($this AS ?subject) (euvoc:endDate as ?predicate) (\"missing\" as ?object)
WHERE {
    $this euvoc:endDate ?endDate .  
    FILTER NOT EXISTS {$this euvoc:startDate ?startDate}
}""" ;
      sh:severity sh:Violation ;
    ] ;
.
euvoc:MappedThing
  rdf:type owl:Class ;
  rdf:type sh:NodeShape ;
  rdfs:comment "Mapped thing" ;
  rdfs:label "Mapped thing" ;
  rdfs:subClassOf euvoc:DatedThing ;
  owl:versionInfo "EuVoc 1.1" ;
  sh:property [
      sh:path <http://lemon-model.net/lemon#context> ;
      sh:class <http://lemon-model.net/lemon#LexicalContext> ;
      sh:minCount 1 ;
      sh:name "context" ;
      sh:nodeKind sh:IRI ;
    ] ;
  sh:property [
      sh:path euvoc:xlNotation ;
      sh:class euvoc:XlNotation ;
      sh:minCount 1 ;
      sh:name "xl notation" ;
    ] ;
.
euvoc:XlNotation
  rdf:type sh:NodeShape ;
  sh:property [
      sh:path euvoc:xlCodification ;
      sh:datatype xsd:string ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
      sh:name "xl codification" ;
    ] ;
.
euvoc:XlNote
  rdf:type sh:NodeShape ;
  sh:property [
      sh:path euvoc:endDate ;
      sh:datatype xsd:date ;
      sh:maxCount 1 ;
      sh:name "end date" ;
    ] ;
  sh:property [
      sh:path euvoc:startDate ;
      sh:datatype xsd:date ;
      sh:maxCount 1 ;
      sh:name "start date" ;
    ] ;
  sh:property [
      sh:path euvoc:xlNote ;
      sh:datatype rdf:langString ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
      sh:name "xl note" ;
    ] ;
  sh:property [
      sh:path dct:created ;
      sh:datatype xsd:date ;
      sh:maxCount 1 ;
      sh:name "created" ;
    ] ;
  sh:property [
      sh:path dct:source ;
      sh:datatype rdf:langString ;
      sh:minCount 0 ;
      sh:name "source" ;
    ] ;
  sh:sparql [
      sh:message "the notes which are definitions shall have a source"@en ;
      sh:select """prefix skos: <http://www.w3.org/2004/02/skos/core#>
prefix skosxl: <http://www.w3.org/2008/05/skos-xl#>
prefix euvoc: <http://publications.europa.eu/ontology/euvoc#>
prefix dct: <http://purl.org/dc/terms/>
SELECT $this (dct:source  AS ?path) 
WHERE {
    ?c a skos:Concept . 
	?c euvoc:xlDefinition $this .
	FILTER NOT EXISTS {
    	$this dct:source ?src
	}
}""" ;
    ] ;
.
euvoc:XlNumericalValue
  rdf:type sh:NodeShape ;
.
euvoc:XlSemanticRelation
  rdf:type sh:NodeShape ;
.
euvoc:XlType
  rdf:type sh:NodeShape ;
.
<http://publications.europa.eu/ontology/euvoc/euvocShapes>
  rdf:type owl:Ontology ;
  rdfs:comment "This is the set of data shape definitions for Named Autority Lists published by MDR. This set of constraints goes way beyond any application profile and attempts to define quality cheks for production purposes." ;
  rdfs:label "Core shape file for EuVoc ontology" ;
  owl:imports <http://datashapes.org/dash> ;
  owl:imports <http://publications.europa.eu/ontology/euvoc> ;
  owl:versionInfo "1.2.0" ;
.
euvocShapes:ObjectOfReplaces
  rdf:type sh:NodeShape ;
  rdfs:comment """If C2 replaces C1 then  
->C2 has status deprecated or retired
->C1 has end date
->optionally (C1 is repladced by C2)""" ;
  rdfs:label "If replaces" ;
  owl:versionInfo "EuVoc 1.1" ;
  sh:property [
      sh:path euvoc:endDate ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
      sh:name "end date" ;
    ] ;
  sh:property [
      sh:path euvoc:status ;
      sh:in (
          concept-status:DEPRECATED
          concept-status:RETIRED
        ) ;
      sh:maxCount 1 ;
      sh:name "status" ;
    ] ;
  sh:property [
      sh:path dct:isReplacedBy ;
      sh:minCount 1 ;
      sh:name "is replaced by" ;
      sh:severity sh:Warning ;
    ] ;
  sh:sparql [
      sh:message "a thing cannot replace itself" ;
      sh:select """prefix skos: <http://www.w3.org/2004/02/skos/core#>
prefix skosxl: <http://www.w3.org/2008/05/skos-xl#>
prefix euvoc: <http://publications.europa.eu/ontology/euvoc#>
prefix dct: <http://purl.org/dc/terms/>
SELECT $this
WHERE {
    ?some dct:replaces $this .
    filter (?some = ?this)
}""" ;
    ] ;
  sh:targetObjectsOf dct:replaces ;
.
euvocShapes:ReifiedPropertyIntervalIntersection
  rdf:type sh:NodeShape ;
  rdfs:comment "Reified property interval intersection; Chech any node which if has second level start/end dates then retrieves their intersections" ;
  rdfs:label "Reified property interval intersection" ;
  owl:versionInfo "EuVoc 1.1" ;
  sh:sparql [
      rdfs:comment "this constraint searches for overlapping intervals on reified propoerties" ;
      sh:message "node {?this} has a reified propoerty with a start/endDate interval [{?s1},{?s2}] overlapping with another interval starting on {?s2}" ;
      sh:select """prefix skos: <http://www.w3.org/2004/02/skos/core#>
prefix skosxl: <http://www.w3.org/2008/05/skos-xl#>
prefix euvoc: <http://publications.europa.eu/ontology/euvoc#>
prefix dct: <http://purl.org/dc/terms/>
select distinct ?this ?s1 ?e1 ?s2
{
  ?this ?p [
      euvoc:startDate ?s1 ;
      euvoc:endDate ?e1  ;
  	].
  
  ?this ?p [
    euvoc:startDate ?s2 ;
  ] .
 
 filter (?e1 > ?s2 && ?s1 < ?s2)  
}""" ;
      sh:severity sh:Warning ;
    ] ;
  sh:target [
      rdf:type sh:SPARQLTarget ;
      rdfs:comment "select all the non blank nodes that tahe a start/endDate propoerty used at the second position on a propoerty path" ;
      sh:select """prefix skos: <http://www.w3.org/2004/02/skos/core#>
prefix skosxl: <http://www.w3.org/2008/05/skos-xl#>
prefix euvoc: <http://publications.europa.eu/ontology/euvoc#>
prefix dct: <http://purl.org/dc/terms/>
select distinct ?this 
{
  ?this ?p [euvoc:startDate | euvoc:endDate [] ;
  ]
 filter (! isBLANK(?this))
}""" ;
    ] ;
.
euvocShapes:SubjectOfEndDate
  rdf:type sh:NodeShape ;
  rdfs:comment "If <b> C </b> has an <i> endDate </i> -> it's status must be deprecated or retired " ;
  rdfs:label "Subject of end date" ;
  owl:versionInfo "EuVoc 1.1" ;
  sh:property [
      sh:path euvoc:status ;
      sh:in (
          <http://publications.europa.eu/resource/authority/concept-status/DEPRECATED>
          <http://publications.europa.eu/resource/authority/concept-status/RETIRED>
        ) ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
      sh:name "status" ;
    ] ;
  sh:targetSubjectsOf euvoc:endDate ;
.
euvocShapes:SubjectOfIsReplacedBy
  rdf:type sh:NodeShape ;
  rdfs:comment """If C1 is replaced by C2 then 
->C2 has status deprecated or retired
->C1 has end date
->optionally (C2 replaces C1)""" ;
  rdfs:label "Subject of is replaced by" ;
  owl:versionInfo "EuVoc 1.1" ;
  sh:property [
      sh:path euvoc:endDate ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
      sh:name "end date" ;
    ] ;
  sh:property [
      sh:path euvoc:status ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
      sh:name "status" ;
    ] ;
  sh:sparql [
      sh:message "a thing cannot be replaced by itself" ;
      sh:select """prefix skos: <http://www.w3.org/2004/02/skos/core#>
prefix skosxl: <http://www.w3.org/2008/05/skos-xl#>
prefix euvoc: <http://publications.europa.eu/ontology/euvoc#>
prefix dct: <http://purl.org/dc/terms/>
SELECT $this
WHERE {
    $this dct:isReplacedBy ?other
    filter ($this = ?other)
}""" ;
    ] ;
  sh:targetSubjectsOf dct:isReplacedBy ;
.
euvocShapes:SubjectOfStatus
  rdf:type sh:NodeShape ;
  rdfs:comment "If C has status Deprecated or Retired -> it has to have an end date " ;
  rdfs:label "Subject of status" ;
  owl:versionInfo "EuVoc 1.1" ;
  sh:property [
      sh:path euvoc:endDate ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
      sh:name "end date" ;
    ] ;
  sh:target [
      rdf:type sh:SPARQLTarget ;
      sh:select """prefix skos: <http://www.w3.org/2004/02/skos/core#>
prefix skosxl: <http://www.w3.org/2008/05/skos-xl#>
prefix euvoc: <http://publications.europa.eu/ontology/euvoc#>
prefix dct: <http://purl.org/dc/terms/>
prefix concept-status: <http://publications.europa.eu/resource/authority/concept-status/>

      SELECT ?this
WHERE {
    ?this euvoc:status ?st. 
	FILTER (?st IN ( <http://publications.europa.eu/resource/authority/concept-status/DEPRECATED>,  <http://publications.europa.eu/resource/authority/concept-status/RETIRED>) )
}""" ;
    ] ;
.
